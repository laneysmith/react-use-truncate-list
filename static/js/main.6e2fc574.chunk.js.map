{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","cheeses","App","useState","initialCheeseCount","setInitialCheeseCount","totalCount","initialCount","arguments","initial","_useState2","displayed","setDisplayCount","remaining","displayAllAction","truncateAction","useTruncateList","className","htmlFor","id","type","min","onChange","e","target","slice","map","cheese","key","onClick","ReactDOM","render","document","getElementById"],"mappings":"0PAEA,SAASA,EAAeC,EAAKC,GAC3B,OAGF,SAAyBD,GACvB,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EAJxBI,CAAgBJ,IAOzB,SAA+BA,EAAKC,GAClC,IAAII,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKX,EAAIY,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAChEV,EAAKW,KAAKN,EAAGO,QAEThB,GAAKI,EAAKa,SAAWjB,GAH8CK,GAAK,IAK9E,MAAOa,GACPZ,GAAK,EACLC,EAAKW,EACL,QACA,IACOb,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,EA9BwBe,CAAsBpB,EAAKC,IAiC5D,WACE,MAAM,IAAIoB,UAAU,wDAlC4CC,GCAlE,IAAMC,EAAU,CACd,OACA,OACA,UACA,UACA,OACA,QACA,aACA,UACA,WACA,YACA,WACA,YACA,gBACA,SA6BaC,EA1BH,WAAO,IAAD,EACsCC,mBAAS,GAD/C,mBACRC,EADQ,KACYC,EADZ,OD2BlB,SAAyBC,GACvB,IAAIC,EAAeC,UAAUZ,OAAS,QAAsBT,IAAjBqB,UAAU,GAAmBA,UAAU,GAAK,EACnFC,EAAUF,EAAe,EAAI,EAAIA,EAGjCG,EAAajC,EADD,mBAASgC,GACkB,GACvCE,EAAYD,EAAW,GACvBE,EAAkBF,EAAW,GAE7BG,EAAYP,EAAaK,EAAY,EAAI,EAAIL,EAAaK,EAC1DG,EAAmB,sBAAY,WACjC,OAAOF,EAAgBN,IACtB,CAACA,IACAS,EAAiB,sBAAY,WAC/B,OAAOH,EAAgBH,IACtB,CAACA,IAIJ,OAHA,oBAAU,WACR,OAAOG,EAAgBH,IACtB,CAACA,EAASH,IACN,CACLK,UAAWA,EACXE,UAAWA,EACXC,iBAAkBA,EAClBC,eAAgBA,GC1CdC,CAAgBf,EAAQL,OAAQQ,GAJlCO,EAJc,EAIdA,UACAE,EALc,EAKdA,UACAC,EANc,EAMdA,iBACAC,EAPc,EAOdA,eAGF,OACE,yBAAKE,UAAU,aACb,wCACA,2BAAOC,QAAQ,gBAAf,YACA,2BAAOC,GAAG,eAAeC,KAAK,SAASC,IAAI,IAAI1B,MAAOS,EAAoBkB,SAZlD,SAAAC,GAAC,OAAIlB,EAAsBkB,EAAEC,OAAO7B,UAa5D,4BACGM,EAAQwB,MAAM,EAAGd,GAAWe,IAAI,SAAAC,GAAM,OACrC,wBAAIC,IAAKD,GAASA,MAGrBd,EACG,4BAAQgB,QAASf,GAAjB,QAAyCD,EAAzC,iBACA,4BAAQgB,QAASd,GAAjB,wBCpCVe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.6e2fc574.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from 'react';\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n/**\n * @param {Number} totalCount - total number of items in the full list\n * @param {Number} initialCount - optional number of items to display before truncating the list\n * @return {Object} an object containing the displayed count, remaining count, an action to reveal\n * the full list, and an action to reset displayed and remaining to their initial values\n */\n\n\nfunction useTruncateList(totalCount) {\n  var initialCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  var initial = initialCount < 0 ? 0 : initialCount;\n\n  var _useState = useState(initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      displayed = _useState2[0],\n      setDisplayCount = _useState2[1];\n\n  var remaining = totalCount - displayed < 0 ? 0 : totalCount - displayed;\n  var displayAllAction = useCallback(function () {\n    return setDisplayCount(totalCount);\n  }, [totalCount]);\n  var truncateAction = useCallback(function () {\n    return setDisplayCount(initial);\n  }, [initial]);\n  useEffect(function () {\n    return setDisplayCount(initial);\n  }, [initial, totalCount]);\n  return {\n    displayed: displayed,\n    remaining: remaining,\n    displayAllAction: displayAllAction,\n    truncateAction: truncateAction\n  };\n}\n\nexport { useTruncateList };","import React, { useState } from 'react'\nimport { useTruncateList } from '@laney/react-use-truncate-list'\n\nconst cheeses = [\n  'Blue',\n  'Brie',\n  'Cheddar',\n  'Chhurpi',\n  'Goat',\n  'Gouda',\n  'GruyÃ¨re',\n  'Havarti',\n  'Parmesan',\n  'Provolone',\n  'Raclette',\n  'Roquefort',\n  'Sharp Cheddar',\n  'Swiss'\n]\n\nconst App = () => {\n  const [ initialCheeseCount, setInitialCheeseCount ] = useState(5)\n  const onUpdateCheeseCount = e => setInitialCheeseCount(e.target.value)\n  const {\n    displayed,\n    remaining,\n    displayAllAction,\n    truncateAction\n  } = useTruncateList(cheeses.length, initialCheeseCount)\n\n  return (\n    <div className='container'>\n      <h3>Cheeses!</h3>\n      <label htmlFor='cheese-count'>Initial:</label>\n      <input id='cheese-count' type='number' min='0' value={initialCheeseCount} onChange={onUpdateCheeseCount} />\n      <ul>\n        {cheeses.slice(0, displayed).map(cheese => (\n          <li key={cheese}>{cheese}</li>\n        ))}\n      </ul>\n      {remaining\n        ? <button onClick={displayAllAction}>Show {remaining} More Cheeses</button>\n        : <button onClick={truncateAction}>Show Fewer Cheeses</button>}\n    </div>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}